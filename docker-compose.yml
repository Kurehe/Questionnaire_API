#version: '3.9'

services:
  questionnaire_api:
    container_name: Questionnaire_API
    image: ${DOCKER_REGISTRY-}questionnaireapi
    build:
      context: .
      dockerfile: Questionnaire_API/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: 8080
      ASPNETCORE_HTTPS_PORTS: 8081
      POSTGRES_DB_HOST: db_postgre
      POSTGRES_DB_PORT: 9435
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: Questionnaire
    # depends_on:
    #   db_postgre:
    #     condition: service_completed_successfully
    ports:
    - "8081:8081"
    - "8080:8080"
    networks:
    - netone

  db_postgre:
    container_name: postgres_container1
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: 1234
      POSTGRES_USER: postgres
      POSTGRES_DB: Questionnaire
      PGDATA: /var/lib/postgresql/data
    # healthcheck:
    #   test: ["CMD", pg_isready -U postgres -d Questionnaire"]
    #   interval: 5s
    #   timeout: 3s
    #   retries: 3
    volumes:
    - db_mount:/var/lib/postgresql/data:rw
    ports:
    - "9435:5432"
    networks:
    - netone

networks:
  netone:
    driver: bridge

volumes:
  db_mount:
    name: postgr_data_qust