services:
  questionnaire_api:
    container_name: Questionnaire_API
    image: ${DOCKER_REGISTRY-}questionnaireapi
    build:
      context: .
      dockerfile: Questionnaire_API/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: 8080
#      ASPNETCORE_HTTPS_PORTS: 8081
      ASPNETCORE_CREATE_DB: true        # создание бд средстваим EF Core, если её нет
      POSTGRES_DB_HOST: db_postgre
      POSTGRES_DB_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: Questionnaire
    depends_on:
      db_postgre:
        condition: service_healthy
    ports:
    - "8080:8080"
    - "8085:8081"

  db_postgre:
    container_name: postgres_container1
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: 1234
      POSTGRES_USER: postgres
      POSTGRES_DB: Questionnaire
      PGDATA: /var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d Questionnaire"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
    - db_mount:/var/lib/postgresql/data:rw
    ports:
    - "9435:5432"

volumes:
  db_mount:
    name: postgr_data_qust